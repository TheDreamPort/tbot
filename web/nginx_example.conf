events { 
    worker_connections 1024;
}

http {
    server {
            listen 80;
            listen [::]:80;
            server_name $TBOT_URI www.$TBOT_URI;

            location / {
                    rewrite ^ https://$host$request_uri? permanent;
            }
    }

    server {
            listen 443 ssl http2;
            listen [::]:443 ssl http2;
            server_name $TBOT_URI www.$TBOT_URI;
    
            server_tokens off;

            rewrite ^([^.]*[^/])$ $1/ permanent;
    
            ssl_certificate /etc/ssl/certs/nginx.crt;
            ssl_certificate_key /etc/ssl/private/nginx.key;
    
            ssl_buffer_size 8k;
    
            ssl_protocols TLSv1.2;
            ssl_prefer_server_ciphers on;
    
	    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS"; 
        
	    ssl_ecdh_curve secp384r1;
            ssl_session_tickets off;

            client_body_buffer_size  1K;
            client_header_buffer_size 1k;
            client_max_body_size 1k;
            large_client_header_buffers 2 1k;
            client_body_timeout 10;
            client_header_timeout 10;
            keepalive_timeout 5 5;
            send_timeout 10;

            location / {
                    try_files $uri $uri/ =404;
            }

            location /admin/ {
                try_files $uri $uri/ @daphne;
            }

            location /api/ {
                try_files $uri $uri/ @daphne;
            }

            location /auth/ {
                try_files $uri $uri/ @daphne;
            }

            location /swagger/ {
                try_files $uri $uri/ @daphne;
            }

            location /static/ {
                try_files $uri $uri/ @daphne;
            }
    
            location @daphne {
                    proxy_redirect off;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    proxy_set_header Host $host;
                    proxy_pass http://daphne:8000;
                    add_header X-Frame-Options "SAMEORIGIN" always;
                    add_header X-XSS-Protection "1; mode=block" always;
                    add_header X-Content-Type-Options "nosniff" always;
                    add_header Referrer-Policy "no-referrer-when-downgrade" always;
                    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
                    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                    # enable strict transport security only if you understand the implications
        
		if ($request_method !~ ^(GET|HEAD|OPTIONS|PATCH|POST|PUT)$ )
		{
		       return 405;

		}
	    }
    
            # Ensure mime types are included, so files aren't rendered just as text
            include /etc/nginx/mime.types;
            root /var/www/html;
            index index.html index.htm index.nginx-debian.html;
    }
}

